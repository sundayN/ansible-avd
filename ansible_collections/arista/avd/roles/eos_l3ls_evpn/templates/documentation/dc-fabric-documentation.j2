{% set fabric_doc = namespace() %}
{% set fabric_doc.leaf_total = 0 %}
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     set fabric_doc.leaf_total = fabric_doc.leaf_total + l3leaf.node_groups[l3leaf_node_group].nodes | length %}
{% endfor %}
# {{ fabric_name }}

## Table of Contents

- [{{ fabric_name }}](#{{ fabric_name|replace('_',"")|lower }} )
  - [Fabric Switches and Management IP](#fabric-switches-and-management-ip)
  - [Fabric Topology](#fabric-topology)
  - [Fabric IP Allocation](#fabric-ip-allocation)
    - [Fabric Point-To-Point Links](#fabric-point-to-point-links)
    - [Point-To-Point Links Node Allocation](#point-to-point-links-node-allocation)
    - [Overlay Loopback Interfaces (BGP EVPN Peering)](#overlay-loopback-interfaces-bgp-evpn-peering)
    - [Loopback0 Interfaces Node Allocation](#loopback0-interfaces-node-allocation)
{% if underlay_routing_protocol|lower == "isis" %}
    - [CLNS Interfaces](#isis-clns-interfaces)
{% endif %}
    - [VTEP Loopback VXLAN Tunnel Source Interfaces (Leafs Only)](#vtep-loopback-vxlan-tunnel-source-interfaces-leafs-only)
    - [VTEP Loopback Node allocation](#vtep-loopback-node-allocation)

## Fabric Switches and Management IP

| Node | Management IP | Platform | Provisioned in Cloudvision |
| ---- | ------------- | -------- | -------------------------- |
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%     if hostvars[node].type == "spine" %}
| {{ node }} | {{ hostvars[node].switch_mgmt_ip }} | {{ hostvars[node].switch_platform }} | {{ 'Not Available' if hostvars[node].is_deployed is defined and hostvars[node].is_deployed == false else 'Provisioned' }} |
{%     endif %}
{% endfor %}
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%    if hostvars[node].type == "l3leaf" %}
| {{ node }} | {{ hostvars[node].switch_mgmt_ip }} | {{ hostvars[node].switch_platform }} | {{ 'Not Available' if hostvars[node].is_deployed is defined and hostvars[node].is_deployed == false else 'Provisioned' }} |
{%     endif %}
{% endfor %}
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%    if hostvars[node].type == "l2leaf" %}
| {{ node }} | {{ hostvars[node].switch_mgmt_ip }} | {{ hostvars[node].switch_platform }} | {{ 'Not Available' if hostvars[node].is_deployed is defined and hostvars[node].is_deployed == false else 'Provisioned' }} |
{%     endif %}
{% endfor %}

> Provision status is based on Ansible inventory declaration and do not represent real status from Cloudvision.

## Fabric Topology

| Type | Leaf Node | Leaf Interface | Peer Node | Peer Interface |
| ---- | --------- | -------------- | --------- | -------------- |
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         set leaf_id = l3leaf.node_groups[l3leaf_node_group].nodes[node].id %}
{%         set leaf_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces %}
{%         if l3leaf.node_groups[l3leaf_node_group].spines is defined %}
{%             set leaf_spines = l3leaf.node_groups[l3leaf_node_group].spines %}
{%         else %}
{%             set leaf_spines = l3leaf.defaults.spines %}
{%         endif %}
{%         if l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces is defined %}
{%             set leaf_uplink_to_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces %}
{%         else %}
{%             set leaf_uplink_to_spine_interfaces = l3leaf.defaults.uplink_to_spine_interfaces %}
{%         endif %}
{%         for spine in leaf_spines %}
{%             set leaf_interface = leaf_uplink_to_spine_interfaces[loop.index0] %}
{%             set spine_interface = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces[loop.index0]%}
| L3 Leaf | {{ node }} | {{ leaf_interface }} | {{ spine }} | {{ spine_interface }} |
{%         endfor %}
{%     endfor %}
{% endfor %}
{% if l2leaf is defined %}
{%     for l2leaf_node_group in l2leaf.node_groups | arista.avd.natural_sort %}
{%         for node in l2leaf.node_groups[l2leaf_node_group].nodes | arista.avd.natural_sort %}
{%             if l2leaf.node_groups[l2leaf_node_group].uplink_interfaces is defined %}
{%                 set uplink_interfaces = l2leaf.node_groups[l2leaf_node_group].uplink_interfaces %}
{%             else %}
{%                 set uplink_interfaces = l2leaf.defaults.uplink_interfaces %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].parent_l3leafs is defined %}
{%                 set parent_l3leafs = l2leaf.node_groups[l2leaf_node_group].parent_l3leafs %}
{%             else %}
{%                 set parent_l3leafs = l2leaf.defaults.parent_l3leafs %}
{%             endif %}
{%             for uplink_interface in uplink_interfaces %}
{%                 set l2leaf_interface = uplink_interfaces[loop.index0] %}
{%                 set l3leaf_node = parent_l3leafs[loop.index0] %}
{%                 set l3leaf_interface = l2leaf.node_groups[l2leaf_node_group].nodes[node].l3leaf_interfaces[loop.index0] %}
| L2 Leaf | {{ node }} | {{ l2leaf_interface }} | {{ l3leaf_node }} | {{ l3leaf_interface }} |
{%                 endfor %}
{%         endfor %}
{%     endfor %}
{% endif %}

## Fabric IP Allocation

### Fabric Point-To-Point Links

| P2P Summary | Available Addresses | Assigned addresses | Assigned Address % |
| ----------- | ------------------- | ------------------ | ------------------ |
| {{ underlay_p2p_network_summary }} | {{ underlay_p2p_network_summary | ipaddr('size') }} | {{ spine.nodes | length * fabric_doc.leaf_total * 2 * max_l3leaf_to_spine_links }} | {{ (( spine.nodes | length * fabric_doc.leaf_total * 2 * max_l3leaf_to_spine_links ) / underlay_p2p_network_summary|ipaddr('size') * 100 ) | round(2,'ceil') }} % |

### Point-To-Point Links Node Allocation

| Leaf Node | Leaf Interface | Leaf IP Address | Spine Node | Spine Interface | Spine IP Address |
| --------- | -------------- | --------------- | ---------- | --------------- | ---------------- |
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         set leaf_id = l3leaf.node_groups[l3leaf_node_group].nodes[node].id %}
{%         set leaf_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces %}
{%         if l3leaf.node_groups[l3leaf_node_group].spines is defined %}
{%             set leaf_spines = l3leaf.node_groups[l3leaf_node_group].spines %}
{%         else %}
{%             set leaf_spines = l3leaf.defaults.spines %}
{%         endif %}
{%         if l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces is defined %}
{%             set leaf_uplink_to_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces %}
{%         else %}
{%             set leaf_uplink_to_spine_interfaces = l3leaf.defaults.uplink_to_spine_interfaces %}
{%         endif %}
{%         for spine in leaf_spines %}
{%             set leaf_interface = leaf_uplink_to_spine_interfaces[loop.index0] %}
{%             set leaf_ip_address = hostvars[node].ethernet_interfaces[leaf_uplink_to_spine_interfaces[loop.index0]].ip_address %}
{%             set spine_interface = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces[loop.index0]%}
{%             set spine_ip_address = hostvars[spine].ethernet_interfaces[leaf_spine_interfaces[loop.index0]].ip_address %}
| {{ node }} | {{ leaf_interface }} | {{ leaf_ip_address  }} | {{ spine }} | {{ spine_interface }} | {{ spine_ip_address }} |
{%         endfor %}
{%     endfor %}
{% endfor %}

### Overlay Loopback Interfaces (BGP EVPN Peering)

| Overlay Loopback Summary | Available Addresses | Assigned addresses | Assigned Address % |
| ------------------------ | ------------------- | ------------------ | ------------------ |
| {{ overlay_loopback_network_summary  }} | {{ overlay_loopback_network_summary | ipaddr('size') }} | {{ spine.nodes | length + fabric_doc.leaf_total }} | {{ (( spine.nodes | length + fabric_doc.leaf_total ) / overlay_loopback_network_summary|ipaddr('size') * 100 ) | round(2,'ceil') }} % |

### Loopback0 Interfaces Node Allocation

| Node | Loopback0 |
| ---- | --------- |
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%     if hostvars[node].type == "spine" %}
| {{ node }} | {{ hostvars[node].loopback_interfaces.Loopback0.ip_address }} |
{%     endif %}
{% endfor %}
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%    if hostvars[node].type == "l3leaf" %}
| {{ node }} | {{ hostvars[node].loopback_interfaces.Loopback0.ip_address }} |
{%     endif %}
{% endfor %}

{% if underlay_routing_protocol|lower == "isis" %}
### ISIS CLNS interfaces

| Node | CLNS Address |
| ---- | ------------ |
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%     if hostvars[node].type == "spine" %}
| {{ node }} | {{ hostvars[node].router_isis.net }} |
{% endif %}
{% endfor %}
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%     if hostvars[node].type == "l3leaf" %}
| {{ node }} | {{ hostvars[node].router_isis.net }} |
{% endif %}
{% endfor %}

{% endif %}
### VTEP Loopback VXLAN Tunnel Source Interfaces (Leafs Only)

| VTEP Loopback Summary | Available Addresses | Assigned addresses | Assigned Address % |
| --------------------- | ------------------- | ------------------ | ------------------ |
| {{ vtep_loopback_network_summary  }} | {{ vtep_loopback_network_summary | ipaddr('size') }} | {{ fabric_doc.leaf_total }} | {{ ( fabric_doc.leaf_total / overlay_loopback_network_summary|ipaddr('size') * 100 ) | round(2,'ceil') }} % |

### VTEP Loopback Node allocation

| Node | Loopback1 |
| ---- | --------- |
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%    if hostvars[node].type == "l3leaf" %}
| {{ node }} | {{ hostvars[node].loopback_interfaces.Loopback1.ip_address }} |
{%     endif %}
{% endfor %}
{# Super Spine to Spine router BGP underlay peering #}
{% for host in groups[dc_name] | arista.avd.natural_sort %}
{%     if hostvars[host]['type'] == 'spine' %}
{%         for offset in range(max_spine_to_super_spine_links) %}
{%             set spine_id = hostvars[host]['spine']['nodes'][host]['id'] %}
{%             set s_spine_id = super_spine.nodes[inventory_hostname].id %}
{%             set ip_pool = hostvars[host]['super_spine_underlay_p2p_network_summary'] %}
{#             max number of hosts in subnet will be divided by max super-spine number to avoid address changes when provisioning new spines #}
{%             set ip_pool_max_hosts_in_subnet = ip_pool | ipaddr('size') %}
    {{
      ip_pool | ipaddr('network') | ipmath(
            (ip_pool_max_hosts_in_subnet / max_super_spines)|int * (s_spine_id-1) + ((spine_id-1) * max_spine_to_super_spine_links + offset) * 2 + 1
        )
    }}:
      peer_group: IPv4-UNDERLAY-PEERS
      remote_as: {{ hostvars[host]['spine']['bgp_as'] }}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Overlay network peering based on evpn_overlay_controller variable #}
{% if switch.overlay_routing_protocol == "ebgp" and switch.evpn_overlay_peers | length > 0 %}
{%     for evpn_overlay_peer in switch.evpn_overlay_peers %}
    {{ evpn_overlay_peer.ip }}:
      peer_group: EVPN-OVERLAY-PEERS
      description: {{ evpn_overlay_peer.description }}
      remote_as: {{ evpn_overlay_peer.bgp_as }}
{%     endfor %}
{% endif %}

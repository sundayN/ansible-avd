{# leaf switch configuration  #}
## Ansible Generated ##

### {{ inventory_hostname }} ###

{# set leaf variables #}
{% set switch = namespace() %}
{% set leaf = namespace() %}
{% for l2leaf_node_group in l2leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l2leaf.node_groups[l2leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == inventory_hostname %}
{%             set leaf.group = l2leaf_node_group %}
{%             set leaf.id = l2leaf.node_groups[l2leaf_node_group].nodes[node].id %}
{%             set switch.mgmt_ip = l2leaf.node_groups[l2leaf_node_group].nodes[node].mgmt_ip %}
{%             if l2leaf.node_groups[l2leaf_node_group].spanning_tree_mode is defined %}
{%                 set switch.spanning_tree_mode = l2leaf.node_groups[l2leaf_node_group].spanning_tree_mode %}
{%             else %}
{%                 set switch.spanning_tree_mode = l2leaf.defaults.spanning_tree_mode %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].igmp_snooping_enabled is defined %}
{%                 set leaf.igmp_snooping_enabled = l2leaf.node_groups[l2leaf_node_group].igmp_snooping_enabled %}
{%             elif l2leaf.defaults.igmp_snooping_enabled is defined %}
{%                 set leaf.igmp_snooping_enabled = l2leaf.defaults.igmp_snooping_enabled %}
{%             else %}
{%                 set leaf.igmp_snooping_enabled = default_igmp_snooping_enabled %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].spanning_tree_priority is defined %}
{%                 set switch.spanning_tree_priority = l2leaf.node_groups[l2leaf_node_group].spanning_tree_priority %}
{%             else %}
{%                 set switch.spanning_tree_priority = l2leaf.defaults.spanning_tree_priority %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].platform is defined %}
{%                 set switch.platform = l2leaf.node_groups[l2leaf_node_group].platform %}
{%             else %}
{%                 set switch.platform = l2leaf.defaults.platform %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].filter.tenants is defined %}
{%                 set leaf.filter_tenants = l2leaf.node_groups[l2leaf_node_group].filter.tenants %}
{%             elif l2leaf.defaults.filter.tenants is defined %}
{%                 set leaf.filter_tenants = l2leaf.defaults.filter.tenants %}
{%             else %}
{%                 set leaf.filter_tenants = [ 'all' ] %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].filter.tags is defined %}
{%                 set leaf.filter_tags = l2leaf.node_groups[l2leaf_node_group].filter.tags %}
{%             elif l2leaf.defaults.filter.tags is defined %}
{%                 set leaf.filter_tags = l2leaf.defaults.filter.tags %}
{%             else %}
{%                 set leaf.filter_tags = [ 'all' ] %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].parent_l3leafs is defined %}
{%                 set leaf.parent_l3leafs = l2leaf.node_groups[l2leaf_node_group].parent_l3leafs %}
{%             else %}
{%                 set leaf.parent_l3leafs = l2leaf.defaults.parent_l3leafs %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].mlag is defined %}
{%                 set switch.mlag = l2leaf.node_groups[l2leaf_node_group].mlag %}
{%             else %}
{%                 set switch.mlag = l2leaf.defaults.mlag | default(true) %}
{%             endif %}
{%             if loop.length == 2 and switch.mlag == true %}
{%                 set leaf.mlag = true %}
{%                 set leaf.mlag_group = l2leaf_node_group %}
{%                 if l2leaf.node_groups[l2leaf_node_group].mlag_dual_primary_detection is defined %}
{%                     set leaf.mlag_dual_primary_detection = l2leaf.node_groups[l2leaf_node_group].mlag_dual_primary_detection %}
{%                 elif l2leaf.defaults.mlag_dual_primary_detection is defined %}
{%                     set leaf.mlag_dual_primary_detection = l2leaf.defaults.mlag_dual_primary_detection %}
{%                 else %}
{%                     set leaf.mlag_dual_primary_detection = false %}
{%                 endif %}
{%                 if l2leaf.node_groups[l2leaf_node_group].mlag_interfaces is defined %}
{%                     set leaf.mlag_interfaces = l2leaf.node_groups[l2leaf_node_group].mlag_interfaces %}
{%                 else %}
{%                     set leaf.mlag_interfaces = l2leaf.defaults.mlag_interfaces %}
{%                 endif %}
{%                 if loop.index == 1 %}
{%                     set leaf.mlag_role = "primary" %}
{%                     set leaf.mlag_peer = loop.nextitem %}
{%                     set leaf.mlag_ip = (( l2leaf.node_groups[l2leaf_node_group].nodes[node].id -1 ) * 2 ) %}
{%                     set leaf.mlag_peer_ip = ((( l2leaf.node_groups[l2leaf_node_group].nodes[node].id -1 ) * 2 ) +1 ) %}
{%                     set leaf.mlag_peer_id = l2leaf.node_groups[l2leaf_node_group].nodes[loop.nextitem].id %}
{%                     set leaf.mlag_peer_mgmt_ip = l2leaf.node_groups[l2leaf_node_group].nodes[loop.nextitem].mgmt_ip | ipaddr('address') %}
{%                 elif loop.index == 2 %}
{%                     set leaf.mlag_role = "secondary" %}
{%                     set leaf.mlag_peer = loop.previtem %}
{%                     set leaf.mlag_ip = ((( l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].id -1 ) * 2 ) +1 ) %}
{%                     set leaf.mlag_peer_ip = (( l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].id -1 ) * 2 )  %}
{%                     set leaf.mlag_peer_id = l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].id  %}
{%                     set leaf.mlag_peer_mgmt_ip = l2leaf.node_groups[l2leaf_node_group].nodes[loop.previtem].mgmt_ip | ipaddr('address') %}
{%                 endif %}
{%             else %}
{%                 set leaf.mlag = false %}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endfor %}
{# get allowed vrfs, svis and vlans from parent L3 Leafs #}
{% set parentl3leaf = namespace() %}
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == leaf.parent_l3leafs[0] %}
{%             set parentl3leaf.group = l3leaf_node_group %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tenants is defined %}
{%                 set parentl3leaf.filter_tenants = l3leaf.node_groups[l3leaf_node_group].filter.tenants %}
{%             else %}
{%                 set parentl3leaf.filter_tenants = [ 'all' ] %}
{%             endif %}
{%             if l3leaf.node_groups[l3leaf_node_group].filter.tags is defined %}
{%                 set parentl3leaf.filter_tags = l3leaf.node_groups[l3leaf_node_group].filter.tags %}
{%             else %}
{%                 set parentl3leaf.filter_tags = [ 'all' ] %}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endfor %}
{# set leaf allowed vrfs, svis and vlans #}
{% set leaf.vrfs = []  %}
{% set leaf.svis = []  %}
{% set leaf.vlans = []  %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenant in parentl3leaf.filter_tenants or "all" in parentl3leaf.filter_tenants %}
{%         if tenants[tenant].vrfs is defined %}
{%             for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%                 for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort %}
{%                     for svi_tag in tenants[tenant].vrfs[vrf].svis[svi].tags %}
{%                         if svi_tag in leaf.filter_tags or svi_tag == leaf.group or "all" in leaf.filter_tags %}
{%                             if svi_tag in parentl3leaf.filter_tags or svi_tag == parentl3leaf.group or "all" in parentl3leaf.filter_tags %}
{%                                 do leaf.vrfs.append( vrf ) %}
{%                                 do leaf.svis.append( svi | int) %}
{%                                 do leaf.vlans.append( svi| int ) %}
{%                                 break %}
{%                             endif %}
{%                         endif %}
{%                     endfor %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%         if tenants[tenant].l2vlans is defined %}
{%             for l2vlan in tenants[tenant].l2vlans | arista.avd.natural_sort %}
{%                 for vlan_tag in tenants[tenant].l2vlans[l2vlan].tags %}
{%                     if vlan_tag in leaf.filter_tags or vlan_tag == leaf.group or "all" in leaf.filter_tags %}
{%                         if vlan_tag in parentl3leaf.filter_tags or vlan_tag == leaf.group or "all" in parentl3leaf.filter_tags %}
{%                             do leaf.vlans.append( l2vlan | int) %}
{%                             break %}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%     endif %}
{% endfor %}
{% set leaf.vrfs = leaf.vrfs | unique  %}

### Leaf Info ###
l2leaf_node_group: {{ leaf.group }}
switch_platform: {{ switch.platform }}
leaf_id: {{ leaf.id }}
switch_mgmt_ip: {{ switch.mgmt_ip }}
leaf_filter_tenants: {{ leaf.filter_tenants }}
leaf_filter_tags: {{ leaf.filter_tags }}
leaf_allowed_vrfs: {{ leaf.vrfs }}
leaf_allowed_svis: {{ leaf.svis }}
leaf_allowed_vlans: {{ leaf.vlans }}
leaf_mlag: {{ leaf.mlag }}
{% if leaf.mlag == true %}
leaf_mlag_group: {{ leaf.mlag_group }}
leaf_mlag_role: {{ leaf.mlag_role }}
leaf_mlag_peer: {{ leaf.mlag_peer }}
leaf_mlag_ip: {{ leaf.mlag_ip }}
leaf_mlag_peer_ip: {{ leaf.mlag_peer_ip }}
leaf_mlag_peer_id: {{ leaf.mlag_peer_id }}
{% endif %}

{# routing protocol model multi-agent needed for EVPN address family #}
service_routing_protocols_model: multi-agent
ip_routing: true

{# Hardware Counters #}
### Hardware Counter
hardware_counters:
{% include 'base/hardware-counters.j2' %}

{# Daemon TerminAttr #}
### Daemon TerminAttr
daemon_terminattr:
{% include 'base/daemon-terminattr.j2' %}

{# vlan allocation policy #}
vlan_internal_order:
{% include 'base/vlan-internal-order.j2' %}


{# event monitor #}
### Event Monitor ###
event_monitor:
{% include 'base/event-monitor.j2' %}

{# event handler #}
### Event Handler ###
event_handlers:
{% include 'base/event-handler.j2' %}

{# load interval #}
### Load Interval ###
load_interval:
{% include 'base/load-interval.j2' %}

{# queue monitor length #}
### Queue Monitor Lenght ###
queue_monitor_length:
{% include 'base/queue-monitor-length.j2' %}

{# name servers #}
### Name Servers ###
name_server:
{% include 'base/name-servers.j2' %}

{# NTP servers #}
### NTP Servers ###
ntp_server:
{% include 'base/ntp-servers.j2' %}

{# redundancy #}
### Redundancy ###
redundancy:
{% include 'base/redundancy.j2' %}

{# spanning-tree #}
### Spanning-tree ###
spanning_tree:
{% include 'base/spanning-tree.j2' %}
{# disable mlag vlan spanning tree #}
{% include 'fabric/mlag/leaf-mlag-spanning-tree.j2' %}

{# unsupported transceiver #}
{% include 'base/unsupported-transeiver.j2' %}

{# aaa authorization #}
### AAA authorization ###
aaa_authorization:
{% include 'base/aaa-authorization.j2' %}

{# local users #}
### local users ###
local_users:
{% include 'base/local-users.j2' %}

{# clock timezone #}
### Clock Timezone ###
clock:
{% include 'base/clock-timezone.j2' %}

{# VLANs #}
### VLANs ###
vlans:
{# mlag VLANs #}
{% include 'fabric/mlag/leaf-mlag-vlans.j2' %}

{# L2leaf Inband Management VLAN #}
{% include 'l3leaf_l2leafs_uplinks/leaf-l2leaf-inband-management-vlan.j2' %}

{# Tenants L2 VLANs #}
{% include 'tenant_evpn_vxlan/leaf-tenant-vlans.j2' %}

{# VRFs #}
### VRFs ###
vrfs:
{# management #}
{% include 'base/mgmt-vrf.j2' %}

{# Port-Channel Interfaces #}
### Port-Channel Interfaces ###
port_channel_interfaces:
{# uplink interfaces #}
{% include 'l3leaf_l2leafs_uplinks/l2leaf-port-channel-uplinks.j2' %}
{# mlag peer-link #}
{% include 'fabric/mlag/leaf-mlag-peer-link.j2' %}
{# Server - Port Channel Interfaces #}
{% include 'edge_ports/leaf-server-port-channels.j2' %}

{# Ethernet Interfaces #}
### Ethernet Interfaces ###
ethernet_interfaces:
{# uplink interfaces #}
{% include 'l3leaf_l2leafs_uplinks/l2leaf-ethernet-uplinks.j2' %}
{# mlag interfaces #}
{% include 'fabric/mlag/leaf-mlag-interfaces.j2' %}
{# Server - Interfaces Configuration #}
{% include 'edge_ports/leaf-server-interfaces.j2' %}

{# Management Interfaces #}
### Management Interfaces ###
management_interfaces:
{% include 'base/mgmt-interface.j2' %}
{# L2leaf Inband Management VLAN interfaces #}
{% include 'l3leaf_l2leafs_uplinks/leaf-l2leaf-inband-management-vlan-interfaces.j2' %}

{# vlan interfaces #}
### VLAN Interfaces ###
vlan_interfaces:
{# mlag vlan interfaces #}
{% include 'fabric/mlag/leaf-mlag-vlan-interfaces.j2' %}

{# TCAM Profiles #}
### TCAM Profiles ###
tcam_profile:
{% include 'base/tcam-profile.j2' %}

{# Platform #}
### Platform ###
platform:
{% include 'base/platform.j2' %}

{# mac address-table #}
### MAC address table ###
mac_address_table:
{% include 'base/mac-address-table.j2' %}

{# Tenant ip-igmp-snooping #}
ip_igmp_snooping:
{% include 'tenant_evpn_vxlan/leaf-tenant-igmp-snooping.j2' %}

{# static_routes #}
### static routes ###
static_routes:
{% include 'routing/static-routes.j2' %}

{# MLAG Configuration #}
{% include 'fabric/mlag/leaf-mlag-configuration.j2' %}

{# queue monitor streaming #}
### Queue Monitor Streaming ###
queue_monitor_streaming:
{% include 'base/queue-monitor-streaming.j2' %}

{# management api http #}
### Management API http ###
management_api_http:
{% include 'base/management-api-http.j2' %}
